x-indexer-environment: &index-common
  POSTGRES_DIALECT: ${POSTGRES_DIALECT:-postgresql+asyncpg}
  POSTGRES_HOST:
  POSTGRES_PORT:
  POSTGRES_USER:
  POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
  POSTGRES_DBNAME:
  POSTGRES_DBROOT:
  POSTGRES_PUBLISH_PORT:

x-index-api: &index-api
  TON_INDEXER_API_ROOT_PATH:
  TON_INDEXER_API_PORT:
  TON_INDEXER_TON_HTTP_API_ENDPOINT:
  TON_INDEXER_IS_TESTNET:
  TON_INDEXER_REDIS_DSN: redis://event-cache:6379
  <<: *index-common

x-index-worker: &index-worker
  TON_WORKER_FROM:
  TON_WORKER_DBROOT: /tondb
  TON_WORKER_BINARY: ton-index-postgres
  TON_WORKER_ADDITIONAL_ARGS:
  <<: *index-common

services:
  event-cache:
    image: redis:latest
    networks:
      - internal
    command: redis-server --maxclients 40000

  event-classifier:
    image: toncenter/ton-indexer-classifier:${VERSION:-latest}
    build:
      context: indexer
      dockerfile: Dockerfile
    secrets:
      - postgres_password
    command: --pool-size ${TON_INDEXER_WORKERS:-8} --prefetch-size 10000 --batch-size 1000 --expected-total 720000000
    environment: *index-api 
    networks:
      internal:

  index-api:
    image: toncenter/ton-indexer-api:${VERSION:-latest}
    build:
      context: ton-index-go
      dockerfile: Dockerfile
    secrets:
      - postgres_password
    command: -prefork -threads ${TON_INDEXER_WORKERS:-1}
    ports:
      - target: 8081
        published: ${TON_INDEXER_API_PORT:-8081}
    environment: *index-api
    restart: always
    networks:
      internal:

  index-worker:
    image: toncenter/ton-indexer-worker:${VERSION:-latest}
    build:
      context: ton-index-worker
      dockerfile: Dockerfile
    secrets:
      - postgres_password
    volumes:
      - ${TON_WORKER_DBROOT:-./}:/tondb
      - ton_index_workdir:/ton_index_workdir
    environment: *index-worker
    networks:
      internal:
    command: --working-dir /ton_index_workdir --from ${TON_WORKER_FROM:-1}
    restart: unless-stopped

  postgres:
    image: postgres:17
    environment: 
      <<: *index-common
      POSTGRES_DB: ${POSTGRES_DBNAME}
    ports:
      - ${POSTGRES_PUBLISH_PORT:-5432}:5432
    secrets:
      - postgres_password
    command: postgres -c max_connections=1024 -c shared_buffers=4GB -c work_mem=64MB -c max_wal_size=1GB -c tcp_keepalives_idle=60 -c tcp_keepalives_interval=60 -c tcp_keepalives_count=60
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    shm_size: 2G
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      internal:
    logging:
      driver: local
      options:
        max-size: 4G

volumes:
  postgres_data:
    external: false
  ton_index_workdir:
    external: false

networks:
  internal:
    attachable: true
    external: false

secrets:
  postgres_password:
    file: ${POSTGRES_PASSWORD_FILE:-private/postgres_password}
